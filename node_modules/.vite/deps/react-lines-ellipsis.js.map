{
  "version": 3,
  "sources": ["../../react-lines-ellipsis/lib/index.modern.mjs"],
  "sourcesContent": ["import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst canvasStyle = {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  height: 0,\n  overflow: 'hidden',\n  'padding-top': 0,\n  'padding-bottom': 0,\n  border: 'none'\n};\nconst mirrorProps = ['box-sizing', 'width', 'font-size', 'font-weight', 'font-family', 'font-style', 'letter-spacing', 'text-indent', 'white-space', 'word-break', 'overflow-wrap', 'padding-left', 'padding-right'];\n\nfunction omit(obj, omittedKeys) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (omittedKeys.indexOf(key) > -1) {\n      return;\n    }\n\n    ret[key] = obj[key];\n  });\n  return ret;\n}\n\nconst _excluded = [\"component\", \"ellipsis\", \"trimRight\", \"className\"];\n\nfunction prevSibling(node, count) {\n  while (node && count--) {\n    node = node.previousElementSibling;\n  }\n\n  return node;\n}\n\nconst defaultProps = {\n  basedOn: undefined,\n  className: '',\n  component: 'div',\n  ellipsis: 'â€¦',\n  // &hellip;\n  maxLine: 1,\n\n  onReflow() {},\n\n  text: '',\n  trimRight: true,\n  winWidth: undefined // for the HOC\n\n};\nconst usedProps = Object.keys(defaultProps);\n/**\n * props.text {String} the text you want to clamp\n * props.maxLine {Number|String} max lines allowed\n * props.ellipsis {String} the ellipsis indicator\n * props.trimRight {Boolean} should we trimRight the clamped text?\n * props.basedOn {String} letters|words\n * props.className {String}\n */\n\nclass LinesEllipsis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.text,\n      clamped: false\n    };\n    this.units = [];\n    this.maxLine = 0;\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n    this.reflow(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.winWidth !== this.props.winWidth) {\n      this.copyStyleToCanvas();\n    }\n\n    if (this.props !== prevProps) {\n      this.reflow(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.parentNode.removeChild(this.canvas);\n    this.canvas = null;\n  }\n\n  setState(state, callback) {\n    if (typeof state.clamped !== 'undefined') {\n      this.clamped = state.clamped;\n    }\n\n    return super.setState(state, callback);\n  }\n\n  initCanvas() {\n    if (this.canvas) return;\n    const canvas = this.canvas = document.createElement('div');\n    canvas.className = `LinesEllipsis-canvas ${this.props.className}`;\n    canvas.setAttribute('aria-hidden', 'true');\n    this.copyStyleToCanvas();\n    Object.keys(canvasStyle).forEach(key => {\n      canvas.style[key] = canvasStyle[key];\n    });\n    document.body.appendChild(canvas);\n  }\n\n  copyStyleToCanvas() {\n    const targetStyle = window.getComputedStyle(this.target);\n    mirrorProps.forEach(key => {\n      this.canvas.style[key] = targetStyle[key];\n    });\n  }\n\n  reflow(props) {\n    /* eslint-disable no-control-regex */\n    const basedOn = props.basedOn || (/^[\\x00-\\x7F]+$/.test(props.text) ? 'words' : 'letters');\n\n    switch (basedOn) {\n      case 'words':\n        this.units = props.text.split(/\\b|(?=\\W)/);\n        break;\n\n      case 'letters':\n        this.units = Array.from(props.text);\n        break;\n\n      default:\n        throw new Error(`Unsupported options basedOn: ${basedOn}`);\n    }\n\n    this.maxLine = +props.maxLine || 1;\n    this.canvas.innerHTML = this.units.map(c => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('');\n    const ellipsisIndex = this.putEllipsis(this.calcIndexes());\n    const clamped = ellipsisIndex > -1;\n    const newState = {\n      clamped,\n      text: clamped ? this.units.slice(0, ellipsisIndex).join('') : props.text\n    };\n    this.setState(newState, props.onReflow.bind(this, newState));\n  }\n\n  calcIndexes() {\n    const indexes = [0];\n    let elt = this.canvas.firstElementChild;\n    if (!elt) return indexes;\n    let index = 0;\n    let line = 1;\n    let offsetTop = elt.offsetTop;\n\n    while (elt = elt.nextElementSibling) {\n      if (elt.offsetTop > offsetTop) {\n        line++;\n        indexes.push(index);\n        offsetTop = elt.offsetTop;\n      }\n\n      index++;\n\n      if (line > this.maxLine) {\n        break;\n      }\n    }\n\n    return indexes;\n  }\n\n  putEllipsis(indexes) {\n    if (indexes.length <= this.maxLine) return -1;\n    const lastIndex = indexes[this.maxLine];\n    const units = this.units.slice(0, lastIndex);\n    const maxOffsetTop = this.canvas.children[lastIndex].offsetTop;\n    this.canvas.innerHTML = units.map((c, i) => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('') + `<wbr><span class='LinesEllipsis-ellipsis'>${this.props.ellipsis}</span>`;\n    const ndEllipsis = this.canvas.lastElementChild;\n    let ndPrevUnit = prevSibling(ndEllipsis, 2);\n\n    while (ndPrevUnit && (ndEllipsis.offsetTop > maxOffsetTop || // IE & Edge: doesn't support <wbr>\n    ndEllipsis.offsetHeight > ndPrevUnit.offsetHeight || ndEllipsis.offsetTop > ndPrevUnit.offsetTop)) {\n      this.canvas.removeChild(ndPrevUnit);\n      ndPrevUnit = prevSibling(ndEllipsis, 2);\n      units.pop();\n    }\n\n    return units.length;\n  } // expose\n\n\n  isClamped() {\n    return this.clamped; // do not use state.clamped. #27\n  }\n\n  render() {\n    const {\n      text,\n      clamped\n    } = this.state;\n\n    const _this$props = this.props,\n          {\n      component: Component,\n      ellipsis,\n      trimRight,\n      className\n    } = _this$props,\n          rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: `LinesEllipsis ${clamped ? 'LinesEllipsis--clamped' : ''} ${className}`,\n      ref: node => this.target = node\n    }, omit(rest, usedProps)), clamped && trimRight ? text.replace(/[\\s\\uFEFF\\xA0]+$/, '') : text, /*#__PURE__*/React.createElement(\"wbr\", null), clamped && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"LinesEllipsis-ellipsis\"\n    }, ellipsis));\n  }\n\n}\n\nLinesEllipsis.defaultProps = defaultProps;\n\nexport { LinesEllipsis as default };\n"],
  "mappings": "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",
  "names": ["React"]
}
